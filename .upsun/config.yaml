applications:
  api:
    source:
      root: "/api"
    type: "composable:25.05"
    stack:
      - "php@8.4":
          extensions:
            - apcu
            - sodium
            - xsl
            - pdo_pgsql
            - redis
            - mbstring
            - gd
            - exif
            - fileinfo
            - iconv
    relationships:
      database: "postgresql:postgresql"
      redis: "redis:redis"
    mounts:
      "/.config":
        source: "storage"
        source_path: "config"
      "bootstrap/cache":
        source: "storage"
        source_path: "cache"
      "storage":
        source: "storage"
        source_path: "storage"
    web:
      locations:
        "/":
          passthru: "/index.php"
          root: "public"
    build:
      flavor: none
    hooks:
      build: |
        set -eux
        composer --no-ansi --no-interaction install --no-progress --prefer-dist --optimize-autoloader --no-dev
      deploy: |
        set -eux
        mkdir -p storage/framework/sessions
        mkdir -p storage/framework/cache
        mkdir -p storage/framework/views
        php artisan migrate --force
        php artisan optimize:clear
      # post_deploy: |
  webapp:
    source:
      root: "/webapp"
    type: "nodejs:22"
    container_profile: HIGH_MEMORY
    mounts:
      "/.npm":
        source: "storage"
        source_path: "npm"
    hooks:
      build: |
        set -eux
        npm i
        npm run build
    web:
      commands:
        start: "npm run start"
      upstream:
        socket_family: tcp
      locations:
        "/":
          root: ""
          passthru: true
services:
  postgresql:
    type: postgresql:17

  redis:
    type: redis:7.0

routes:
  "https://app.{default}/":
    type: upstream
    upstream: "webapp:http"
  "https://api.{default}/":
    type: upstream
    upstream: "api:http"
  "http://app.{default}/":
    type: redirect
    to: "https://app.{default}/"
  "http://api.{default}/":
    type: redirect
    to: "https://api.{default}/"
